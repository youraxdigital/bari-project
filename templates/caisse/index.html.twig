{% extends 'base.html.twig' %}

{% block title %}Gestion de caisse{% endblock %}
{% block header_title %}Gestion de caisse{% endblock %}
{% block show_import %}{{ true }}{% endblock %}

{% block body %}
    <div class="container py-10">

        {# === 1. CAISSE ACTUELLE & MOUVEMENTS === #}
        <div class="card mb-10">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h2 class="mb-0">
                    <i class="bi bi-wallet2 me-2"></i>Gestion de caisse
                </h2>

                {% if caisse %}
                    <form id="close-caisse-form">
                        <button type="submit" class="btn btn-danger btn-sm" id="close-caisse-btn">
                            <i class="bi bi-lock-fill me-1"></i> Clôturer la caisse
                            <span class="spinner-border spinner-border-sm d-none" id="close-loader"></span>
                        </button>
                    </form>
                {% endif %}
            </div>

            <div class="card-body">
                {% if caisse %}
                    <div class="card card-flush mb-5">
                        <div class="card-body py-4 px-6">
                            <div class="d-flex align-items-center justify-content-between mb-5">
                                <div class="d-flex align-items-center">
                                    <div class="symbol symbol-50px symbol-circle me-4 bg-light-primary">
                                        <span class="symbol-label fs-4 fw-bold text-primary">
                                            {{ caisse.agentResponsable|slice(0, 1)|upper }}
                                        </span>
                                    </div>
                                    <div>
                                        <span class="fw-bold d-block text-gray-700">Responsable</span>
                                        <h4 class="fw-bolder text-dark mb-0">{{ caisse.agentResponsable }}</h4>
                                    </div>
                                </div>

                                <div class="text-end">
                                    <span class="fw-bold d-block text-gray-700">
                                        <i class="bi bi-cash-stack me-1"></i>Montant actuel
                                    </span>
                                    <span class="badge badge-light-success fs-2 fw-bold" id="montant-actuel">
                                        {{ caisse.montantActuel }} MAD
                                    </span>
                                    <span id="montant-sync-loader" class="spinner-border spinner-border-sm align-middle text-success d-none"></span>
                                </div>
                            </div>

                        </div>
                    </div>


                    {# Formulaire mouvement #}
                    <form id="form-mouvement" action="{{ path('app_caisse_mouvement') }}" method="post" class="row g-3 align-items-end mb-7">
                        <input type="hidden" name="caisse_id" value="{{ caisse.id }}">

                        <div class="col-md-3">
                            <label class="form-label">Type</label>
                            <select name="type" class="form-select" required>
                                <option value="ENTREE">➕ Entrée</option>
                                <option value="SORTIE">➖ Sortie</option>
                            </select>
                        </div>

                        <div class="col-md-5">
                            <label class="form-label">Motif</label>
                            <input name="motif" class="form-control" required>
                        </div>

                        <div class="col-md-2">
                            <label class="form-label">Montant</label>
                            <input name="montant" type="number" step="0.01" class="form-control" required>
                        </div>

                        <div class="col-md-2">
                            <label class="form-label d-block">&nbsp;</label>
                            <button type="submit" class="btn btn-primary w-100" id="ajouter-mouvement-btn">
                                <i class="bi bi-plus-circle me-1"></i>Ajouter
                                <span class="spinner-border spinner-border-sm d-none" id="ajouter-loader"></span>
                            </button>
                        </div>
                    </form>

                    {# Historique mouvements #}
                    <div>
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h4 class="mb-0">
                                <i class="bi bi-clock-history me-1"></i>Historique des mouvements
                            </h4>
                            <!--<button id="export-pdf-btn" class="btn btn-light-info btn-sm">
                                <i class="bi bi-printer me-1"></i>Exporter PDF
                                <span class="spinner-border spinner-border-sm d-none" id="export-loader"></span>
                            </button>-->
                        </div>

                        <table class="table table-striped align-middle" id="table-mouvements">
                            <thead>
                            <tr class="text-muted fw-bold text-uppercase">
                                <th><i class="bi bi-calendar2 me-1"></i>Date</th>
                                <th><i class="bi bi-arrow-repeat me-1"></i>Type</th>
                                <th><i class="bi bi-card-text me-1"></i>Motif</th>
                                <th><i class="bi bi-cash me-1"></i>Montant</th>
                            </tr>
                            </thead>
                            <tbody>
                            {% for m in caisse.mouvements %}
                                <tr>
                                    <td>{{ m.createdAt|date('d/m/Y H:i') }}</td>
                                    <td>
                                        {% if m.type == 'ENTREE' %}
                                            <span class="badge badge-light-success">Entrée</span>
                                        {% elseif m.type == 'ENCAISSEMENT' %}
                                            <span class="badge badge-light-info">Encaissement</span>
                                        {% else %}
                                            <span class="badge badge-light-danger">Sortie</span>
                                        {% endif %}
                                    </td>
                                    <td>{{ m.motif }}</td>
                                    <td>{{ m.montant }} MAD</td>
                                </tr>
                            {% else %}
                                <tr><td colspan="4" class="text-center text-muted">Aucun mouvement</td></tr>
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>

                {% else %}
                    <div class="d-flex justify-content-end">
                        <form method="post" action="{{ path('app_caisse_open') }}">
                            <div class="row align-items-center">
                                <div class="col">
                                    <input type="text" name="agentResponsable" class="form-control" placeholder="Agent responsable" required>
                                </div>
                                <div class="col">
                                    <input type="number" name="montant" step="0.01" class="form-control" placeholder="Montant initial" required>
                                </div>
                                <div class="col-auto">
                                    <button class="btn btn-success">
                                        <i class="bi bi-unlock-fill me-1"></i>Ouvrir la caisse
                                    </button>
                                </div>
                            </div>
                        </form>
                    </div>
                {% endif %}
            </div>
        </div>

        {# === 2. DEMANDES A ENCAISSER === #}
        {% if caisse %}
            <div class="card">
                <div class="card-header">
                    <h4 class="mb-1 mt-6">
                        <i class="bi bi-journal-check me-1"></i>Demandes à encaisser
                    </h4>
                </div>
                <div class="card-body">
                    <div id="lot-summary" class="d-flex justify-content-between align-items-center mb-3 d-none">
                        <div>
                            <strong id="selected-count">0</strong> ligne(s) sélectionnée(s) —
                            <strong id="selected-total">0.00</strong> MAD
                        </div>
                        <button class="btn btn-info" id="encaisser-lot-btn">
                            <i class="bi bi-cash-stack me-1"></i>Encaisser
                        </button>
                    </div>

                    <div class="table-responsive">
                        <table id="table-demandes" class="table table-bordered table-hover table-row-dashed">
                            <thead>
                            <tr class="text-muted fw-bold text-uppercase">
                                <th><!--<input type="checkbox" id="select-all-demandes">--></th>
                                <th>Code Client<br><input type="text" class="form-control form-control-sm" placeholder="Code" /></th>
                                <th>Nom Client<br><input type="text" class="form-control form-control-sm" placeholder="Nom" /></th>
                                <th>Article<br>
                                    <select class="form-select form-select-sm">
                                        <option value="">— Tous —</option>
                                        {% for a in articles %}
                                            <option value="{{ a.name }}">{{ a.name }}</option>
                                        {% endfor %}
                                    </select>
                                </th>
                                <th>Date<br><input id="filter_date_range" class="form-control form-control-sm" placeholder="Plage de dates" /></th>
                                <th>Effectif</th>
                                <th>Montant</th>
                                {#<th>Action</th>#}
                            </tr>
                            </thead>
                            <tbody>
                            {% for d in demandes %}
                                <tr>
                                    <td><input type="checkbox" class="select-demande" value="{{ d.id }}" data-montant="{{ d.montant }}"></td>
                                    <td>{{ d.client.code }}</td>
                                    <td>{{ d.client.nom }} {{ d.client.prenom }}</td>
                                    <td>{{ d.article.name }}</td>
                                    <td data-date="{{ d.date|date('Y-m-d') }}">{{ d.date|date('d/m/Y') }}</td>
                                    <td>{{ d.quantite }}</td>
                                    <td>{{ d.montant }} MAD</td>
                                    {# <td>
                                        <button class="btn btn-sm btn-success encaisser-btn" data-id="{{ d.id }}">
                                            <i class="bi bi-cash-stack me-1"></i>Encaisser
                                        </button>
                                    </td> #}
                                </tr>
                            {% else %}
                                <tr><td colspan="7" class="text-center text-muted">Aucune demande</td></tr>
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        {% endif %}



    </div>



    <div class="modal fade" id="confirmEncaisseModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirmation d'encaissement</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Type de paiement</label>
                        <select name="typePaiement" class="form-select" required>
                            <option value="">— Sélectionner —</option>
                            <option value="espece">Espèce</option>
                            <option value="banque">Banque</option>
                            <option value="carte">Carte</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                    <button type="button" class="btn btn-success" id="confirm-encaisse-btn">
                        <span class="spinner-border spinner-border-sm d-none" id="encaisse-loader"></span>
                        Oui, encaisser
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="confirmCloseModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <form id="form-close-caisse">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Clôturer la caisse</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label">Montant de clôture</label>
                            <input type="number" step="0.01" name="montantCloture" class="form-control" required min="0">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                        <button type="submit" class="btn btn-danger" id="confirm-close-btn">
                            <span class="spinner-border spinner-border-sm d-none" id="confirm-close-loader"></span>
                            Oui, clôturer
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>


    <div class="modal fade" id="confirmEncaisseLotModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <form id="form-encaisse-lot">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Encaisser les demandes sélectionnées</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label d-block mb-2">Type de paiement</label>

                            <div class="btn-group w-100" data-kt-buttons="true">
                                <label class="btn btn-outline btn-outline-success active">
                                    <input type="radio" class="btn-check" name="typePaiement" value="espece" autocomplete="off" checked>
                                    <i class="bi bi-cash-coin me-1"></i> Espèce
                                </label>

                                <label class="btn btn-outline btn-outline-primary">
                                    <input type="radio" class="btn-check" name="typePaiement" value="banque" autocomplete="off">
                                    <i class="bi bi-bank2 me-1"></i> Banque
                                </label>

                                <label class="btn btn-outline btn-outline-warning">
                                    <input type="radio" class="btn-check" name="typePaiement" value="carte" autocomplete="off">
                                    <i class="bi bi-credit-card-2-front me-1"></i> Carte
                                </label>
                                <input type="hidden" name="ids" id="lot-ids">
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                        <button type="submit" class="btn btn-success">
                            <span class="spinner-border spinner-border-sm d-none" id="lot-encaisse-loader"></span>
                            Oui, encaisser
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>






{% endblock %}

{% block javascripts %}
    <script>
        let demandeIdToEncaisser = null;
        const encaisseModal = new bootstrap.Modal(document.getElementById('confirmEncaisseModal'));
        const lotModal = new bootstrap.Modal(document.getElementById('confirmEncaisseLotModal'));
        let selectedDemandes = {}; // Ex: { "12": 500.00, "17": 100.50 }


        $(document).ready(function () {
            const demandesTable = $('#table-demandes').DataTable({
                ordering: false, // 🔴 Désactiver le tri
                dom: 'rtip' // retirer les filtres natifs
            });
            const mouvementsTable = $('#table-mouvements').DataTable();
            const encaisseModal = new bootstrap.Modal(document.getElementById('confirmEncaisseModal'));
            const closeModal = new bootstrap.Modal(document.getElementById('confirmCloseModal'));

            let demandeIdToEncaisser = null;

            // Modal Encaissement
            $(document).on('click', '.encaisser-btn', function () {
                demandeIdToEncaisser = $(this).data('id');
                $('#encaisse-loader').addClass('d-none');
                $('#confirm-encaisse-btn').prop('disabled', false);
                encaisseModal.show();
            });

            $('#confirm-encaisse-btn').on('click', function () {
                const btn = $(this);
                const typePaiement = $('#confirmEncaisseModal select[name="typePaiement"]').val();

                if (!typePaiement) {
                    toastr.warning('Veuillez sélectionner un type de paiement');
                    return;
                }

                btn.prop('disabled', true);
                $('#encaisse-loader').removeClass('d-none');
                showMontantLoader();

                $.post(`/app/v1/caisse/encaisser/${demandeIdToEncaisser}`, {
                    typePaiement: typePaiement
                }).done(function () {
                    toastr.success('✅ Demande encaissée');
                    reloadTables();
                }).fail(function () {
                    toastr.error("❌ Erreur lors de l'encaissement");
                }).always(function () {
                    btn.prop('disabled', false);
                    $('#encaisse-loader').addClass('d-none');
                    encaisseModal.hide();
                    $('#confirmEncaisseModal select[name="typePaiement"]').val(''); // reset
                });
            });


            // Confirmation modale de clôture
            $('#close-caisse-form').on('submit', function (e) {
                e.preventDefault();
                closeModal.show();
            });

            $('#form-close-caisse').on('submit', function (e) {
                e.preventDefault();

                const form = $(this);
                const btn = $('#confirm-close-btn');
                const loader = $('#confirm-close-loader');

                btn.prop('disabled', true);
                loader.removeClass('d-none');

                const montantCloture = form.find('[name="montantCloture"]').val();

                $.post('{{ path("app_caisse_close") }}', { montantCloture }, function (response) {
                    if (response.success) {
                        toastr.success("✅ Caisse clôturée avec succès !");
                        setTimeout(() => window.location.reload(), 1000);
                    } else {
                        toastr.error(response.message || "❌ Erreur inconnue");
                    }
                }).fail(() => {
                    toastr.error("❌ Erreur serveur lors de la clôture.");
                }).always(() => {
                    btn.prop('disabled', false);
                    loader.addClass('d-none');
                    $('#confirmCloseModal').modal('hide');
                });
            });


            // Ajout de mouvement avec loader + resync
            $('#form-mouvement').on('submit', function (e) {
                e.preventDefault();
                const form = $(this);
                const btn = $('#ajouter-mouvement-btn');
                const loader = $('#ajouter-loader');

                btn.prop('disabled', true);
                loader.removeClass('d-none');
                showMontantLoader();

                $.post(form.attr('action'), form.serialize())
                    .done(function () {
                        toastr.success("💰 Mouvement ajouté avec succès !");
                        reloadTables(); // recharge les mouvements + montant + demandes
                        form.trigger('reset');
                    })
                    .fail(function () {
                        toastr.error("❌ Erreur lors de l'ajout du mouvement");
                    })
                    .always(function () {
                        btn.prop('disabled', false);
                        loader.addClass('d-none');
                    });
            });


            function reloadTables() {
                $.get(window.location.href, function (html) {
                    const updatedDemandes = $(html).find('#table-demandes tbody').html();
                    const updatedMouvements = $(html).find('#table-mouvements tbody').html();
                    const updatedMontant = $(html).find('#montant-actuel').text();

                    // Destroy DataTables
                    $('#table-demandes').DataTable().clear().destroy();
                    $('#table-mouvements').DataTable().clear().destroy();

                    // Replace content
                    $('#table-demandes tbody').html(updatedDemandes);
                    $('#table-mouvements tbody').html(updatedMouvements);
                    $('#montant-actuel').text(updatedMontant);

                    // Reinit demandes DataTable
                    const demandesTable = $('#table-demandes').DataTable({
                        ordering: false,
                        dom: 'rtip'
                    });

                    // 🧠 Rebind filters
                    $('#table-demandes thead tr th').each(function (i) {
                        const input = $(this).find('input, select');
                        if (input.length && i !== 3 && i !== 6) { // exclude date & action column
                            input.off().on('keyup change', function () {
                                demandesTable.column(i).search(this.value).draw();
                            });
                        }
                    });

                    // 📆 Rebind flatpickr
                    flatpickr("#filter_date_range", {
                        mode: "range",
                        dateFormat: "d/m/Y",
                        onChange: function (selectedDates) {
                            if (selectedDates.length === 2) {
                                const start = selectedDates[0];
                                const end = selectedDates[1];

                                demandesTable.rows().every(function () {
                                    const dateCell = this.node().querySelector('td[data-date]');
                                    if (dateCell) {
                                        const dateStr = dateCell.getAttribute('data-date');
                                        const rowDate = new Date(dateStr + 'T00:00:00');

                                        if (rowDate >= start && rowDate <= end) {
                                            $(this.node()).show();
                                        } else {
                                            $(this.node()).hide();
                                        }
                                    }
                                });
                            } else {
                                demandesTable.rows().every(function () {
                                    $(this.node()).show();
                                });
                            }
                        }
                    });

                    // Reinit mouvements DataTable (if needed)
                    $('#table-mouvements').DataTable();

                    hideMontantLoader();
                    resetSummarySelectedDemandes();
                });
            }



            function showMontantLoader() {
                $('#montant-sync-loader').removeClass('d-none');
            }

            function hideMontantLoader() {
                $('#montant-sync-loader').addClass('d-none');
            }

            $('#export-pdf-btn').on('click', function () {
                const btn = $(this);
                const loader = $('#export-loader');

                btn.prop('disabled', true);
                loader.removeClass('d-none');

                fetch('{{ path("app_caisse_export") }}', {
                    method: 'GET'
                })
                    .then(response => {
                        if (!response.ok) throw new Error("Erreur lors de l'export PDF");
                        return response.blob();
                    })
                    .then(blob => {
                        const url = window.URL.createObjectURL(blob);
                        const a = document.createElement('a');
                        a.href = url;
                        a.download = "historique-caisse.pdf";
                        document.body.appendChild(a);
                        a.click();
                        a.remove();
                        window.URL.revokeObjectURL(url);
                    })
                    .catch(() => {
                        toastr.error("❌ Une erreur est survenue lors de la génération du PDF.");
                    })
                    .finally(() => {
                        btn.prop('disabled', false);
                        loader.addClass('d-none');
                    });
            });


            // 🔍 Filtres sur colonnes textuelles
            $('#table-demandes thead tr th').each(function (i) {
                const input = $(this).find('input, select');
                if (input.length && i !== 3 && i !== 6) { // colonne date exclue ici (gérée à part)
                    input.on('keyup change', function () {
                        demandesTable.column(i).search(this.value).draw();
                    });
                }
            });

            // 📆 Flatpickr pour plage de dates
            flatpickr("#filter_date_range", {
                mode: "range",
                dateFormat: "d/m/Y",
                onChange: function (selectedDates) {
                    if (selectedDates.length === 2) {
                        const start = selectedDates[0];
                        const end = selectedDates[1];

                        demandesTable.rows().every(function () {
                            const dateCell = this.node().querySelector('td[data-date]');
                            if (dateCell) {
                                const dateStr = dateCell.getAttribute('data-date');
                                const rowDate = new Date(dateStr + 'T00:00:00');

                                if (rowDate >= start && rowDate <= end) {
                                    $(this.node()).show();
                                } else {
                                    $(this.node()).hide();
                                }
                            }
                        });
                    } else {
                        // Réafficher toutes les lignes si sélection vide
                        demandesTable.rows().every(function () {
                            $(this.node()).show();
                        });
                    }
                }
            });


            // encaissement global

            $(document).on('change', '.select-demande', function () {
                const id = $(this).val();
                const montant = parseFloat($(this).data('montant'));

                if ($(this).is(':checked')) {
                    selectedDemandes[id] = montant;
                } else {
                    delete selectedDemandes[id];
                }

                updateLotSummary();
            });

            function updateLotSummary() {
                const count = Object.keys(selectedDemandes).length;
                const total = Object.values(selectedDemandes).reduce((sum, m) => sum + m, 0);

                $('#selected-count').text(count);
                $('#selected-total').text(total.toFixed(2));
                $('#lot-ids').val(Object.keys(selectedDemandes).join(','));

                $('#lot-summary').toggleClass('d-none', count === 0);
            }


            // Sélection/dé-sélection globale
            $('#select-all-demandes').on('change', function () {
                const checked = this.checked;

                $('.select-demande').each(function () {
                    const id = $(this).val();
                    const montant = parseFloat($(this).data('montant'));

                    if (checked) {
                        selectedDemandes[id] = montant;
                        $(this).prop('checked', true);
                    } else {
                        delete selectedDemandes[id];
                        $(this).prop('checked', false);
                    }
                });

                updateLotSummary();
            });


            // Mise à jour dynamique
            $(document).on('change', '.select-demande', updateLotSummary);

            // Click bouton encaisser le lot
            $('#encaisser-lot-btn').on('click', function () {
                lotModal.show();
            });

            // Soumission encaissement lot
            $('#form-encaisse-lot').on('submit', function (e) {
                e.preventDefault();

                const form = $(this);
                const loader = $('#lot-encaisse-loader');
                loader.removeClass('d-none');

                // 🔽 Récupération manuelle des champs
                const typePaiement = form.find('[name="typePaiement"]:checked').val();
                console.log("typePaiement=======>>>>",typePaiement);
                const idsRaw = form.find('[name="ids"]').val(); // "24,25,41"
                const idsArray = idsRaw.split(',').map(id => id.trim());

                $.ajax({
                    url: '{{ path("app_caisse_encaisser_lot") }}',
                    method: 'POST',
                    data: {
                        typePaiement: typePaiement,
                        ids: idsRaw
                    },
                    traditional: true, // IMPORTANT pour envoyer un vrai tableau 'ids[]'
                    success: function () {
                        toastr.success('✅ Lot encaissé avec succès !');
                        lotModal.hide();
                        reloadTables(); // Met à jour dynamiquement les tableaux sans reload
                        resetSummarySelectedDemandes();
                    },
                    error: function () {
                        toastr.error("❌ Erreur lors de l'encaissement en lot");
                    },
                    complete: function () {
                        loader.addClass('d-none');
                    }
                });
            });



            $('#table-demandes').on('draw.dt', function () {
                $('.select-demande').each(function () {
                    const id = $(this).val();
                    if (selectedDemandes[id]) {
                        $(this).prop('checked', true);
                    }
                });

                updateLotSummary(); // au cas où pagination modifie l’affichage
            });

            function resetSummarySelectedDemandes() {
                // 🔁 Réinitialisation du résumé
                $('#lot-summary').addClass('d-none'); // Masquer le résumé
                $('#selected-count').text('0');
                $('#selected-total').text('0.00 MAD');
                $('#lot-ids').val(''); // Champ caché ids dans le formulaire

                // 🔁 Réinitialiser les cases cochées si besoin
                $('.row-checkbox').prop('checked', false);
            }


        });

    </script>

{% endblock %}
