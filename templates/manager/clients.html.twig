{# templates/manager/clients.html.twig #}
{% extends 'base.html.twig' %}
{% block title %}Configuration des Clients{% endblock %}
{% block header_title %}Configuration des Clients{% endblock %}

{% block body %}
    <div class="container py-10">
        <div class="d-flex justify-content-between align-items-center mb-5">
            <h2 class="fw-bold"></h2>
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalClient">
                <i class="bi bi-plus-circle me-2"></i> Ajouter Client
            </button>
        </div>

        <div class="card p-10">
            <div class="table-responsive" style="max-height:500px; overflow-y:auto;">
                <!--<table class="table table-row-dashed table-row-gray-300 gy-4" id="clientsTableArabic">
                    <thead>
                    <tr class="fw-bold fs-6 text-gray-800 text-center">
                        <th>الرمز</th>
                        <th>الاسم الكامل</th>
                        <th>رقم الهاتف</th>
                        <th>الفئة</th>
                        <th>الإجراء</th>
                    </tr>
                    </thead>
                    <tbody class="text-center">
                    <tr>
                        <td>CL001</td>
                        <td>محمد العلوي</td>
                        <td>0600000000</td>
                        <td>عادي</td>
                        <td>
                            <button class="btn btn-sm btn-warning">
                                <i class="bi bi-pencil"></i> تعديل
                            </button>
                        </td>
                    </tr>
                    <tr>
                        <td>CL002</td>
                        <td>فاطمة الزهراء</td>
                        <td>0611111111</td>
                        <td>مميز</td>
                        <td>
                            <button class="btn btn-sm btn-warning">
                                <i class="bi bi-pencil"></i> تعديل
                            </button>
                        </td>
                    </tr>
                    <tr>
                        <td>CL003</td>
                        <td>سعيد بنسعيد</td>
                        <td>0622222222</td>
                        <td>عادي</td>
                        <td>
                            <button class="btn btn-sm btn-warning">
                                <i class="bi bi-pencil"></i> تعديل
                            </button>
                        </td>
                    </tr>
                    </tbody>
                </table>-->

                <table id="clientsTable" class="table table-row-dashed table-row-gray-300 gy-4">
                    <thead>
                    <tr class="fw-bold fs-6 text-gray-800">
                        <th>Code<br><input id="f_code" type="text" class="form-control form-control-sm" placeholder="Code"></th>
                        <th>Nom/Prénom<br><input id="f_nom" type="text" class="form-control form-control-sm" placeholder="Nom ou Prénom"></th>
                        <th>Téléphone<br><input id="f_tel" type="text" class="form-control form-control-sm" placeholder="Téléphone"></th>
                        <th>Catégorie<br><input id="f_cat" type="text" class="form-control form-control-sm" placeholder="Catégorie"></th>
                        <th>Action</th>
                    </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>

    {# ---------- ADD MODAL ---------- #}
    <div class="modal fade" id="modalClient" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form id="clientForm">
                    <div class="modal-header">
                        <h5 class="modal-title">Ajouter Client</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" name="id" id="clientId">
                        <div class="mb-3">
                            <label class="form-label">Code</label>
                            <input type="text" name="code" class="form-control" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Nom</label>
                            <input type="text" name="nom" class="form-control" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Prénom</label>
                            <input type="text" name="prenom" class="form-control">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Téléphone</label>
                            <input type="text" name="telephone" class="form-control">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Catégorie</label>
                            <select name="categorieId" class="form-select">
                                <option value="">-- Sélectionner --</option>
                                {% for ca in categories %}
                                    <option value="{{ ca.id }}">{{ ca.label }}</option>
                                {% endfor %}
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Localisation</label>
                            <div id="addMap" style="height: 300px;"></div>
                            <input type="hidden" name="localisation" id="addLocalisation">
                        </div>

                    </div>
                    <div class="modal-footer">
                        <button type="submit" id="clientSubmitBtn" class="btn btn-primary">Enregistrer</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    {# ---------- EDIT MODAL ---------- #}
    <div class="modal fade" id="editClientModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form id="editClientForm">
                    <div class="modal-header">
                        <h5 class="modal-title">Modifier Client</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" id="editClientId" name="id">
                        <div class="mb-3">
                            <label class="form-label">Code</label>
                            <input type="text" class="form-control" id="editCode" name="code">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Nom</label>
                            <input type="text" class="form-control" id="editNom" name="nom">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Prénom</label>
                            <input type="text" class="form-control" id="editPrenom" name="prenom">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Téléphone</label>
                            <input type="text" class="form-control" id="editTelephone" name="telephone">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Catégorie</label>
                            <select id="editCategorieId" name="categorieId" class="form-select">
                                <option value="">-- Sélectionner --</option>
                                {% for ca in categories %}
                                    <option value="{{ ca.id }}">{{ ca.label }}</option>
                                {% endfor %}
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Localisation</label>
                            <div id="editMap" style="height: 300px;"></div>
                            <input type="hidden" name="localisation" id="editLocalisation">
                        </div>

                    </div>
                    <div class="modal-footer">
                        <button type="submit" id="clientSubmitEditBtn" class="btn btn-primary">Enregistrer</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>

        $(document).ready(function () {
            // DataTable
            const table = $('#clientsTable').DataTable({
                processing: true,
                serverSide: true,
                searching: false,
                ordering: false,
                pageLength: 10,
                lengthMenu: [10, 25, 50, 100],
                ajax: {
                    url: '/app/v1/clients/datatable',
                    type: 'GET',
                    data: function (d) {
                        d.code = $('#f_code').val() || '';
                        d.nom  = $('#f_nom').val() || '';
                        d.tel  = $('#f_tel').val() || '';
                        d.cat  = $('#f_cat').val() || '';
                    }
                },
                columns: [
                    { data: 'code' },
                    { data: 'nomComplet' },
                    { data: 'telephone', render: v => v ? `<span class="badge badge-light-info">${v}</span>` : '' },
                    { data: 'categorie' },
                    {
                        data: 'id', orderable:false,
                        render: function (id, _, row) {
                            const payload = encodeURIComponent(JSON.stringify(row));
                            return `
            <button class="btn btn-icon btn-sm btn-light-info editClient" data-client="${payload}" title="Modifier">
              <i class="bi bi-pencil"></i>
            </button>`;
                        }
                    }
                ],
                language: { url: '/custom/datatables/i18n/French.json' }
            });

            // Filters
            const reload = () => table.ajax.reload();
            let debounce;
            $('#f_code,#f_nom,#f_tel,#f_cat')
                .on('change', reload)
                .on('keyup', function(){
                    clearTimeout(debounce);
                    debounce = setTimeout(reload, 300);
                });

            // ---------- ADD ----------
            // Lors de l'ouverture du modal d'ajout
            $('#modalClient').on('shown.bs.modal', function () {
                setTimeout(() => initLeafletMap('addMap', 'addLocalisation'), 200);
            });

            const $addModal = $('#modalClient');
            const $addForm = $('#clientForm');
            $('#clientForm')[0].reset();

            $addForm.on('submit', function(e){
                e.preventDefault();
                const $btn = $('#clientSubmitBtn');
                const orig = $btn.html();
                $btn.prop('disabled', true).html('<span class="spinner-border spinner-border-sm me-2"></span>Enregistrement...');

                $.ajax({
                    url: '/app/v1/clients',
                    method: 'POST',
                    data: $addForm.serialize(),
                    success: function(resp){
                        $addModal.modal('hide');
                        $addForm[0].reset();
                        table.ajax.reload(null, false);
                    },
                    error: function(xhr){
                        alert(xhr.responseText || 'Erreur lors de l’enregistrement');
                    },
                    complete: function(){
                        $btn.prop('disabled', false).html(orig);
                    }
                });
            });

            // ---------- EDIT ----------
            const $editModal = $('#editClientModal');
            const $editForm  = $('#editClientForm');

            // Lors de l'ouverture du modal de modification
            $('#clientsTable').on('click', '.editClient', function () {
                try {
                    const row = JSON.parse(decodeURIComponent($(this).data('client')));
                    $('#editClientId').val(row.id);
                    $('#editCode').val(row.code);
                    const parts = (row.nomComplet || '').trim().split(/\s+/);
                    $('#editNom').val(parts[0] || '');
                    $('#editPrenom').val(parts.slice(1).join(' ') || '');
                    $('#editTelephone').val(row.telephone || '');
                    $('#editCategorieId').val(row.categorieId || '');
                    $('#editLocalisation').val(row.localisation || '');

                    console.log("row.localisation ====>>", row.localisation);

                    $('#editClientModal').modal('show');

                    setTimeout(() => {
                        const defaultPos = row.localisation ? row.localisation.split(',').map(Number) : [33.5731, -7.5898];
                        initLeafletMap('editMap', 'editLocalisation', defaultPos);
                    }, 200);

                } catch (e) {
                    console.error(e);
                }
            });

            $editForm.on('submit', function(e){
                e.preventDefault();
                const $btn = $('#clientSubmitEditBtn');
                const orig = $btn.html();
                $btn.prop('disabled', true).html('<span class="spinner-border spinner-border-sm me-2"></span>Enregistrement...');

                $.ajax({
                    url: '/app/v1/clients/update/' + $('#editClientId').val(),
                    method: 'POST',
                    data: $editForm.serialize(),
                    success: function(){
                        $editModal.modal('hide');
                        table.ajax.reload(null, false);
                    },
                    error: function(xhr){
                        alert(xhr.responseText || 'Mise à jour échouée');
                    },
                    complete: function(){
                        $btn.prop('disabled', false).html(orig);
                    }
                });
            });
        });


        // Initialisation des cartes Leaflet
        function initLeafletMap(mapId, inputId, defaultLatLng = [33.5731, -7.5898]) {
            const value = document.getElementById(inputId).value;
            let coords = defaultLatLng;

            if (value && value.includes(',')) {
                const parts = value.split(',').map(parseFloat);
                if (!isNaN(parts[0]) && !isNaN(parts[1])) {
                    coords = parts;
                }
            }

            // Reset Leaflet container if already initialized
            const mapContainer = document.getElementById(mapId);
            if (mapContainer._leaflet_id) {
                mapContainer._leaflet_id = null;
            }

            const map = L.map(mapId).setView(coords, 16);

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; OpenStreetMap'
            }).addTo(map);

            const marker = L.marker(coords, { draggable: true }).addTo(map);
            marker.bindPopup("Déplacez le marqueur ou cliquez sur la carte pour le positionner.").openPopup();
            document.getElementById(inputId).value = coords.join(',');

            // Géocoder
            L.Control.geocoder({
                defaultMarkGeocode: false
            })
                .on('markgeocode', function(e) {
                    const latlng = e.geocode.center;
                    marker.setLatLng(latlng);
                    map.setView(latlng, 17);
                    document.getElementById(inputId).value = `${latlng.lat},${latlng.lng}`;
                })
                .addTo(map);

            marker.on('dragend', function () {
                const pos = marker.getLatLng();
                document.getElementById(inputId).value = `${pos.lat},${pos.lng}`;
            });

            // Fix: do not update marker when user is just dragging the map
            let mapDragged = false;

            map.on('movestart', function () {
                mapDragged = true;
            });

            map.on('moveend', function () {
                setTimeout(() => { mapDragged = false; }, 200); // slight delay for drag detection
            });

            map.on('click', function (e) {
                if (mapDragged) return; // ignore clicks during drag

                marker.setLatLng(e.latlng);
                document.getElementById(inputId).value = `${e.latlng.lat},${e.latlng.lng}`;
                marker.bindPopup("Position mise à jour.").openPopup();
            });

            return map;
        }




    </script>
{% endblock %}
