{% extends 'base.html.twig' %}

{% block title %}Configuration des Demandes{% endblock %}
{% block header_title %}Configuration des demandes{% endblock %}
{% block show_import %}{{ true }}{% endblock %}

{% block body %}
    <!-- HEADER MENU NAVIGATION -->

    <div class="container py-10">
        <!-- BOUTONS (alignés à droite) -->

        <!-- BARRE DE RECHERCHE -->
        <div class="mb-5">
            <!--<div class="input-group">
                <input type="text" id="searchInput" class="form-control form-control-solid" placeholder="Rechercher code...">
                <button id="searchBtn" class="btn btn-light-primary"><i class="bi bi-search"></i></button>
            </div>-->
        </div>

        <!-- RÉSULTATS -->
        <div class="container py-10">
            <div class="d-flex justify-content-between align-items-center mb-5">
                <h2 class="fw-bold"></h2>
                <button class="btn btn-light-primary" data-bs-toggle="modal" data-bs-target="#importModal">
                    <i class="bi bi-file-earmark-spreadsheet-fill fs-2x me-2"></i> Import Excel
                </button>
            </div>
            <div class="card p-10" id="resultsContainer" style="display: block;">
                <!-- TABLEAU SCROLLABLE -->
                <div class="table-responsive" style="max-height:500px; overflow-y:auto;">
                    <table id="kt_datatable_results" class="table table-row-dashed table-row-gray-300 gy-4">
                        <thead>
                        <tr class="fw-bold fs-6 text-gray-800">
                            <th>Code<br><input id="filter_code" type="text" class="form-control form-control-sm" placeholder="Code"></th>
                            <th>Nom<br><input id="filter_nom" type="text" class="form-control form-control-sm" placeholder="Nom"></th>
                            <th>Date<br><input id="filter_date" type="text" class="form-control form-control-sm" placeholder="Date" autocomplete="off"></th>
                            <th>Article<br>
                                <select id="filter_article" class="form-select form-select-solid">
                                    <option value="">— Sélectionner —</option>
                                    {% for a in articles %}
                                        <option value="{{ a.id }}">{{ a.name }}</option>
                                    {% endfor %}
                                </select>
                            </th>
                            <th>Type</th>
                            <th>Effectif</th>
                            <th>Prix</th>
                            <th>Montant</th>
                            <th>Flux<br>
                                <select id="filter_flux" class="form-select form-select-solid">
                                    <option value="">— Sélectionner —</option>
                                    {% for s in statusDemandes %}
                                        <option value="{{ s.id }}">{{ s.status }}</option>
                                    {% endfor %}
                                </select>
                            </th>
                            <th>Action</th>
                        </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>




    </div>

    <!-- MODAL D’IMPORT -->
    <div class="modal fade" id="importModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-top">
            <div class="modal-content p-5">
                <div class="modal-header">
                    <h5 class="modal-title">Importer un fichier Excel</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <form id="importExcelForm" enctype="multipart/form-data">
                    <div class="modal-body">
                        <div id="importErrorMsg" class="alert alert-danger d-none" role="alert">
                            <!-- message d'erreur ici -->
                        </div>
                        <div id="typeTotalsContainer" class="mb-4">
                            {% for article in articles %}
                                <div class="row align-items-center mb-2">
                                    <div class="col-md-6">
                                        <label>{{ article.name }}</label>
                                    </div>
                                    <div class="col-md-6">
                                        <input type="number" min="0" class="form-control form-control-sm" name="type_totals[{{ article.name }}]" placeholder="Total attendu">
                                    </div>
                                </div>
                            {% endfor %}
                        </div>

                        <div class="mb-4">
                            <input type="file" name="excel_file" class="form-control" accept=".xls,.xlsx" required>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary" id="importSubmitBtn">
                            <i class="bi bi-upload"></i> Importer
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- MODAL : Ajout Client -->
    <div class="modal fade" id="modalClient" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-top">
            <div class="modal-content p-5">
                <div class="modal-header">
                    <h5 class="modal-title">Ajouter un client</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>

                <form id="clientForm">
                    <div class="modal-body">
                        <div class="row g-4">
                            <div class="col-md-6">
                                <label class="form-label">Nom</label>
                                <input type="text" name="nom" class="form-control form-control-solid" required>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Prénom</label>
                                <input type="text" name="prenom" class="form-control form-control-solid" required>
                            </div>

                            <div class="col-md-6">
                                <label class="form-label">Code (unique)</label>
                                <input type="text" name="code" class="form-control form-control-solid" required>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Téléphone</label>
                                <input type="text" name="telephone" class="form-control form-control-solid">
                            </div>

                            <div class="col-md-6">
                                <label class="form-label">Prix</label>
                                <input type="number" step="0.01" name="prix" class="form-control form-control-solid" required>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Catégorie</label>
                                <select name="categorieId" class="form-select form-select-solid" required>
                                    <option value="">— Sélectionner —</option>
                                    {% for c in categories %}
                                        <option value="{{ c.id }}">{{ c.label }}</option>
                                    {% endfor %}
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="modal-footer">
                        <button id="btnSaveClient" type="submit" class="btn btn-primary">
                            <i class="bi bi-check-circle me-2"></i> Enregistrer
                        </button>
                    </div>
                </form>

            </div>
        </div>
    </div>

    <!-- MODAL : Ajout Article -->
    <div class="modal fade" id="modalArticle" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-top">
            <div class="modal-content p-5">
                <div class="modal-header">
                    <h5 class="modal-title">Ajouter un article</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>

                <form id="articleForm">
                    <div class="modal-body">
                        <div class="row g-4">
                            <div class="col-md-6">
                                <label class="form-label">Code (unique)</label>
                                <input type="text" name="code" class="form-control form-control-solid" required>
                            </div>
                            <div class="col-md-3">
                                <label class="form-label">TVA (%)</label>
                                <input type="number" step="0.01" name="tva" class="form-control form-control-solid" required>
                            </div>
                            <div class="col-md-3">
                                <label class="form-label">Prix unitaire</label>
                                <input type="number" step="0.01" name="prixUnitaire" class="form-control form-control-solid" required>
                            </div>
                            <div class="col-12">
                                <label class="form-label">Catégorie</label>
                                <select name="categorieId" class="form-select form-select-solid" required>
                                    <option value="">— Sélectionner —</option>
                                    {% for ca in categoriesArticle %}
                                        <option value="{{ ca.id }}">{{ ca.label }}</option>
                                    {% endfor %}
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="modal-footer">
                        <button id="btnSaveArticle" type="submit" class="btn btn-primary">
                            <i class="bi bi-check-circle me-2"></i> Enregistrer
                        </button>
                    </div>
                </form>

            </div>
        </div>
    </div>


    <!-- MODAL DE CONFIRMATION SUPPRESSION -->
    <div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirmation</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Voulez-vous vraiment supprimer cette demande ?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteBtn">
                        <span class="indicator-label">Supprimer</span>
                        <span class="indicator-progress" style="display:none;">Suppression...
                        <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                    </span>
                    </button>
                </div>
            </div>
        </div>
    </div>

{% endblock %}

{% block javascripts %}
    <script>
        $(document).ready(function () {
            // Initialisation du datepicker pour le filtre date avec Metronic8 flatpickr
            flatpickr("#filter_date", {
                mode: "range",
                dateFormat: "d/m/Y",
                locale: "fr"
            });

            const $table = $('#kt_datatable_results');

            // SERVER SIDE -----------------------
            const table = $table.DataTable({
                processing: true,
                serverSide: true,
                searching: false,         // we’ll use our own inputs
                ordering: false,          // optional; enable if you add sort handling server-side
                pageLength: 5,
                lengthMenu: [5, 10, 25, 50, 100],
                ajax: {
                    url: '/app/v1/assistant/demandes/datatable',
                    type: 'GET',
                    data: function (d) {
                        d.code = $('#filter_code').val() || '';
                        d.nom  = $('#filter_nom').val()  || '';
                        d.date = $('#filter_date').val() || ''; // if empty, backend uses today by default
                        d.article = $('#filter_article').val() || '';
                        d.flux = $('#filter_flux').val() || '';
                    }
                },
                columns: [
                    { data: 'code' },
                    { data: 'nom' },
                    { data: 'date', render: (v)=> `<span class="badge badge-light-info">${v}</span>` },
                    { data: 'article' },
                    { data: 'type' },
                    { data: 'effectif' },
                    { data: 'prix' },
                    { data: 'montant', render: (v)=> `<span class="badge ${v>=0?'badge-light-success':'badge-light-danger'}">${v}</span>` },
                    { data: 'flux', render: (v)=> `<span class="badge badge-light-primary">${v ?? ''}</span>` },
                    { data: 'id', orderable:false, render: (id, _, row)=> `
                    <button class="btn btn-icon btn-sm btn-light-danger delete-btn" data-id="${id}">
                        <i class="bi bi-trash"></i>
                    </button>`
                    }
                ],
                rowCallback: function(row, data) {
                    if (data.deleted === true) {
                        $(row).addClass('text-muted text-decoration-line-through');
                    }
                },
                language: {
                    // host this file locally to avoid CORS
                    //url: '//cdn.datatables.net/plug-ins/1.10.25/i18n/French.json'
                    url: '/custom/datatables/i18n/French.json'
                }
            });

            // reload on filter change
            $('#filter_code, #filter_nom, #filter_article,  #filter_flux, #filter_date').on('keyup change', () => table.ajax.reload());

            $(document).on('click', '.delete-btn', function () {
                demandeToDelete = $(this).data('id');
                $('#deleteConfirmModal').modal('show');
            });

            $('#confirmDeleteBtn').on('click', function () {
                const $btn = $(this);
                $btn.find('.indicator-label').hide();
                $btn.find('.indicator-progress').show();

                $.ajax({
                    url: `/app/v1/assistant/demandes/${demandeToDelete}/delete`,
                    type: 'POST',
                    success: function () {
                        toastr.success('Demande marquée comme supprimée.');
                        $('#deleteConfirmModal').modal('hide');
                        table.ajax.reload(null, false);
                    },
                    error: function () {
                        toastr.error('Erreur lors de la suppression.');
                    },
                    complete: function () {
                        $btn.find('.indicator-progress').hide();
                        $btn.find('.indicator-label').show();
                    }
                });
            });

        });


        $(document).on('submit', '#importExcelForm', function (e) {
            e.preventDefault();

            const $submitBtn = $('#importSubmitBtn');
            const $errorBox = $('#importErrorMsg');
            const originalHtml = $submitBtn.html();

            // Reset error box
            $errorBox.addClass('d-none').text('');

            // Disable button & show spinner
            $submitBtn.prop('disabled', true)
                .html('<span class="spinner-border spinner-border-sm me-2"></span>Importation des lignes...');

            let formData = new FormData(this);

            // Ajoute dynamiquement les valeurs des totaux saisis
            $('#typeTotalsContainer input').each(function () {
                const name = $(this).attr('name');
                const value = $(this).val();
                formData.append(name, value);
            });

            $.ajax({
                url: '/app/v1/assistant/import',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                beforeSend: function () {
                    toastr.info('Importation en cours...');
                },
                success: function (response) {
                    toastr.success('Importation réussie !');
                    $('#importModal').modal('hide');
                    location.reload(); // ou recharger la liste dynamiquement
                },
                error: function (xhr) {
                    toastr.error('Échec de l’importation');
                    let msg = 'Erreur inconnue lors de l’importation.';
                    if (xhr.responseJSON && xhr.responseJSON.error) {
                        msg = xhr.responseJSON.error;
                    }
                    $errorBox.removeClass('d-none').text(msg); // Affiche dans la modale
                },
                complete: function () {
                    // Restore button
                    $submitBtn.prop('disabled', false).html(originalHtml);
                }
            });
        });

        $(document).on('submit', '#clientForm', function (e) {
            e.preventDefault();
            const $btn = $('#btnSaveClient').prop('disabled', true);
            toastr.info('Création en cours...');
            $.ajax({
                url: '/app/v1/clients',
                type: 'POST',
                data: $(this).serialize(),
                success: function (res) {
                    //KTApp.showToast({ message: 'Client créé avec succès', type: 'success', icon: 'check-circle' });
                    toastr.success('Client créé avec succès !');
                    $('#modalClient').modal('hide');
                    $('#clientForm')[0].reset();
                    // Option: recharger une liste, ou insérer une ligne dans un tableau si tu en as un
                },
                error: function (xhr) {
                    const msg = (xhr.responseJSON && xhr.responseJSON.message) ? xhr.responseJSON.message : 'Erreur lors de la création';
                    //KTApp.showToast({ message: msg, type: 'error', icon: 'exclamation-triangle' });
                    toastr.error('Erreur lors de la création !');
                },
                complete: function () { $btn.prop('disabled', false); }
            });
        });

        $(document).on('submit', '#articleForm', function (e) {
            e.preventDefault();
            const $btn = $('#btnSaveArticle').prop('disabled', true);
            toastr.info('Création en cours...');
            $.ajax({
                url: '/app/v1/articles',
                type: 'POST',
                data: $(this).serialize(),
                success: function (res) {
                    toastr.success('Article créé avec succès !');
                    $('#modalArticle').modal('hide');
                    $('#articleForm')[0].reset();
                    // TODO: rafraîchir un DataTable si nécessaire
                },
                error: function (xhr) {
                    const msg = xhr.responseJSON?.message || 'Erreur lors de la création';
                    toastr.error('Erreur lors de la création !');
                },
                complete: function () { $btn.prop('disabled', false); }
            });
        });
    </script>
{% endblock %}
